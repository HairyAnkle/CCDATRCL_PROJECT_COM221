/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cw.project_dsa;

import javax.swing.*;
import java.awt.*;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ogena
 */
public class ContactList_Frame extends javax.swing.JFrame {

    private Contact root;
    private DefaultTableModel model;
    
    public ContactList_Frame() {
        root = null;
      
        initComponents();
        
        model = new DefaultTableModel(new Object[]
                {  
                   "Name",
                   "Phone Number"
                },0);
        contactList.setModel(model);         
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        addContact = new javax.swing.JButton();
        removeContact = new javax.swing.JButton();
        find_max_number = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        contactList = new javax.swing.JTable();
        inorder_traversal = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        find_contact = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFocusTraversalPolicyProvider(true);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(51, 153, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setForeground(new java.awt.Color(0, 153, 204));

        addContact.setBackground(new java.awt.Color(102, 204, 255));
        addContact.setIcon(new javax.swing.ImageIcon("C:\\Users\\ogena\\Documents\\NetBeansProjects\\Project_DSA\\src\\main\\java\\icons\\icons8-add-contact-100.png")); // NOI18N
        addContact.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Add Contact", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_BOTTOM, new java.awt.Font("SansSerif", 1, 14))); // NOI18N
        addContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addContactActionPerformed(evt);
            }
        });

        removeContact.setBackground(new java.awt.Color(102, 204, 255));
        removeContact.setIcon(new javax.swing.ImageIcon("C:\\Users\\ogena\\Documents\\NetBeansProjects\\Project_DSA\\src\\main\\java\\icons\\icons8-remove-contact-100.png")); // NOI18N
        removeContact.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Remove Contact", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_BOTTOM, new java.awt.Font("SansSerif", 1, 14))); // NOI18N
        removeContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeContactActionPerformed(evt);
            }
        });

        find_max_number.setBackground(new java.awt.Color(102, 204, 255));
        find_max_number.setIcon(new javax.swing.ImageIcon("C:\\Users\\ogena\\Documents\\NetBeansProjects\\Project_DSA\\src\\main\\java\\icons\\icons8-view-100.png")); // NOI18N
        find_max_number.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Find Maximum", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_BOTTOM, new java.awt.Font("SansSerif", 1, 14))); // NOI18N
        find_max_number.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                find_max_numberActionPerformed(evt);
            }
        });

        contactList.setAutoCreateRowSorter(true);
        contactList.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        contactList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Contact Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(contactList);

        inorder_traversal.setBackground(new java.awt.Color(102, 204, 255));
        inorder_traversal.setIcon(new javax.swing.ImageIcon("C:\\Users\\ogena\\Documents\\NetBeansProjects\\Project_DSA\\src\\main\\java\\icons\\icons8-order-100.png")); // NOI18N
        inorder_traversal.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Inorder Traversal", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_BOTTOM, new java.awt.Font("SansSerif", 1, 14))); // NOI18N
        inorder_traversal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inorder_traversalActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextArea1);

        find_contact.setBackground(new java.awt.Color(102, 204, 255));
        find_contact.setIcon(new javax.swing.ImageIcon("C:\\Users\\ogena\\Documents\\NetBeansProjects\\Project_DSA\\src\\main\\java\\icons\\icons8-find-user-male-100.png")); // NOI18N
        find_contact.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Find Contact", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_BOTTOM, new java.awt.Font("SansSerif", 1, 14))); // NOI18N
        find_contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                find_contactActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel2.setText("Output:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(addContact, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(find_contact, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(removeContact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(find_max_number, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(inorder_traversal, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(34, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(79, 79, 79))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(removeContact, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addContact, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(find_max_number, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(find_contact, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(inorder_traversal, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47))))
        );

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("X");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 48)); // NOI18N
        jLabel1.setText("Contacts");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addContactActionPerformed
        // TODO add your handling code here:
        String name = JOptionPane.showInputDialog("Enter Name:");
        String phoneNumber = JOptionPane.showInputDialog("Enter Phone Number:");
        
        if (name != null && phoneNumber != null) {
            root = insertNode(root, name, phoneNumber);
            updateTable();
            jTextArea1.setText(String.format("Added %s to the contact list.", name));
        }else {
            JOptionPane.showMessageDialog(this, "Please enter both name and phone number!");
        }
    }//GEN-LAST:event_addContactActionPerformed

    private Contact insertNode(Contact root, String name, String phone_number) {
        // Return a new node if the tree is empty
        if (root == null) {
            root = new Contact(name, phone_number);
            return root;
        }
        
        // Traverse to the right place and insert the node
        if (name.compareTo(root.name) < 0)
            root.left = insertNode(root.left, name, phone_number);
        else if (name.compareTo(root.name) > 0)
            root.right = insertNode(root.right, name, phone_number);

        return root;
    }
    
    private void updateTable() {
        model.setRowCount(0);
        inorderTraversal(root);
    }
    
    private void inorderTraversal(Contact root) {
        if (root != null) {
            inorderTraversal(root.left);
            Object[] rowData = {root.name, root.phone_number};
            model.addRow(rowData);
            inorderTraversal(root.right);
        }
    }
    
    private void removeContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeContactActionPerformed
        // TODO add your handling code here:
        String name = JOptionPane.showInputDialog("Enter name:");
        
        if (!name.isEmpty()){
            root = deleteNode(root, name);
            if (root != null) {
                updateTable();
                jTextArea1.setText(String.format("Removed %s to the contact list. %n", name));                 
            } else {
                JOptionPane.showMessageDialog(this, "Not Found!");
            }

        }
    }//GEN-LAST:event_removeContactActionPerformed

    private Contact deleteNode(Contact root, String name) {
        // Return if the tree is empty
        if (root == null) {
            return root;
        }
        
        // Find the node to be deleted
        if (name.compareTo(root.name) < 0)
            root.left = deleteNode(root.left, name);
        else if (name.compareTo(root.name) > 0)
            root.right = deleteNode(root.right, name);
        else {
            // f the node is with only one child or no child
            if (root.left == null)
                return root.right;
            else if (root.right == null)
                return root.left;
            
            // If the node has two children
            // Place the inorder successor in position of the node to be deleted
            root.name = _minValueNode(root.right).name;
            root.phone_number = _minValueNode(root.right).phone_number;
            
            // Delete the inorder successor
            root.right = deleteNode(root.right, root.name);
        }
        return root;
    }
    
    private Contact _minValueNode(Contact root) {
        Contact current = root;
        
        //Find the leftmost leaf
        while (current.left != null) {
            current = current.left; 
        }
        return current;
    }
    private void find_max_numberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_find_max_numberActionPerformed
        // TODO add your handling code here:
        String max_phone_number = _find_max_phone_number(root);
        if (max_phone_number != null) jTextArea1.setText(String.format("The contact with the maximum phone number is %s", max_phone_number));
        else {
            JOptionPane.showMessageDialog(this, "The contact list is empty");
        }
    }//GEN-LAST:event_find_max_numberActionPerformed

    private String _find_max_phone_number(Contact root) {
        if (root == null) {
            return null;
        }
        while(root.right != null) {
            root = root.right;
        }
        return root.phone_number;
    }
    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        String input = JOptionPane.showInputDialog(this, "Do you want to Exit? Y/N");

        if (input.equalsIgnoreCase("y")) {
            System.exit(0);
        } else {}
    }//GEN-LAST:event_jLabel3MouseClicked

    private void inorder_traversalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inorder_traversalActionPerformed
        // TODO add your handling code here:
        jTextArea1.setText(String.format("InOrder Traversal:%n"));
        traverseInorder(root);
    }//GEN-LAST:event_inorder_traversalActionPerformed

    private void traverseInorder(Contact root) {
        if (root != null) {
            traverseInorder(root.left);
            jTextArea1.setText(jTextArea1.getText() + String.format("%s (%s) -> ", root.name, root.phone_number));
            traverseInorder(root.right);
        }
    }
    private void find_contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_find_contactActionPerformed
        // TODO add your handling code here:
        String name = JOptionPane.showInputDialog("Enter name:");
        
        if (!name.isEmpty()) {
            String result = searchNode(root, name);
            if (result != null) {
                jTextArea1.setText(String.format("%s found in the contact list!%nPhone number: %s%n", name, result));
                JOptionPane.showMessageDialog(this, "Found!");
            }
            else jTextArea1.setText(String.format("%s not found in the contact list.%n", name));
        }
    }//GEN-LAST:event_find_contactActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        for (double i = 0.0; i <=1.0; i = i+0.1){
            String val = i+ "";
            float f = Float.parseFloat(val);
            this.setOpacity(f);
            try{
                Thread.sleep(50);
            }catch(Exception e){
                
            }
        }        
    }//GEN-LAST:event_formWindowOpened
   
    private String searchNode(Contact root, String name) {
        if (root == null) {
            return null;
        }
        
        if (name.equals(root.name)) return root.phone_number;
        else if (name.compareTo(root.name) < 0) return searchNode(root.left, name);
        else return searchNode(root.right, name);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ContactList_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ContactList_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ContactList_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ContactList_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ContactList_Frame app = new ContactList_Frame();
                app.setVisible(true);
                app.setLocationRelativeTo(null);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addContact;
    private javax.swing.JTable contactList;
    private javax.swing.JButton find_contact;
    private javax.swing.JButton find_max_number;
    private javax.swing.JButton inorder_traversal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton removeContact;
    // End of variables declaration//GEN-END:variables
}
